// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace AppConfiguration.Models
{
    /// <summary> The Pet. </summary>
    public partial class Pet
    {
        /// <summary> Initializes a new instance of Pet. </summary>
        /// <param name="name"> . </param>
        /// <param name="photoUrls"> . </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> or <paramref name="photoUrls"/> is null. </exception>
        public Pet(string name, IEnumerable<string> photoUrls)
        {
            if (name == null)
            {
                throw new ArgumentNullException(nameof(name));
            }
            if (photoUrls == null)
            {
                throw new ArgumentNullException(nameof(photoUrls));
            }

            Name = name;
            PhotoUrls = photoUrls.ToList();
            Tags = new ChangeTrackingList<Tag>();
        }

        /// <summary> Initializes a new instance of Pet. </summary>
        /// <param name="id"> . </param>
        /// <param name="category"> . </param>
        /// <param name="name"> . </param>
        /// <param name="photoUrls"> . </param>
        /// <param name="tags"> . </param>
        /// <param name="status"> pet status in the store. </param>
        internal Pet(long? id, Category category, string name, IList<string> photoUrls, IList<Tag> tags, PetStatus? status)
        {
            Id = id;
            Category = category;
            Name = name;
            PhotoUrls = photoUrls;
            Tags = tags;
            Status = status;
        }

        public long? Id { get; set; }
        public Category Category { get; set; }
        public string Name { get; set; }
        public IList<string> PhotoUrls { get; }
        public IList<Tag> Tags { get; }
        /// <summary> pet status in the store. </summary>
        public PetStatus? Status { get; set; }
    }
}
