!<!CodeModel> 
info: !<!Info> 
  description: |
    This is a sample server Petstore server.  You can find 
    out more about Swagger at 
    [http://swagger.io](http://swagger.io) or on 
    [irc.freenode.net, #swagger](http://swagger.io/irc/).
  contact:
    email: apiteam@swagger.io
  externalDocs:
    description: Find out more about Swagger
    url: 'http://swagger.io'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'http://swagger.io/terms/'
  title: AppConfiguration
schemas: !<!Schemas> 
  booleans:
    - !<!BooleanSchema> &ref_13
      type: boolean
      defaultValue: false
      language: !<!Languages> 
        default:
          name: Boolean
          description: ''
      protocol: !<!Protocols> {}
  numbers:
    - !<!NumberSchema> &ref_2
      type: integer
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_41
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_1
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
          header: X-Rate-Limit
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_10
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_48
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      maximum: 10
      minimum: 1
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_50
      type: integer
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      minimum: 1
      precision: 64
      language: !<!Languages> 
        default:
          name: Integer
          description: ''
      protocol: !<!Protocols> {}
    - !<!NumberSchema> &ref_20
      type: integer
      precision: 32
      language: !<!Languages> 
        default:
          name: Integer
          description: User Status
      protocol: !<!Protocols> {}
  strings:
    - !<!StringSchema> &ref_0
      type: string
      language: !<!Languages> 
        default:
          name: String
          description: simple string
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_3
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: CategoryName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_4
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: PetName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_5
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: PetPhotoUrlsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_6
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: TagName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_27
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: String
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_14
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserUsername
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_15
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserFirstName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_16
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserLastName
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_17
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserEmail
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_18
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserPassword
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_19
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: UserPhone
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_21
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ApiResponseType
          description: ''
      protocol: !<!Protocols> {}
    - !<!StringSchema> &ref_22
      type: string
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: ApiResponseMessage
          description: ''
      protocol: !<!Protocols> {}
  choices:
    - !<!ChoiceSchema> &ref_7
      choices:
        - !<!ChoiceValue> 
          value: available
          language:
            default:
              name: Available
              description: ''
        - !<!ChoiceValue> 
          value: pending
          language:
            default:
              name: Pending
              description: ''
        - !<!ChoiceValue> 
          value: sold
          language:
            default:
              name: Sold
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: PetStatus
          description: pet status in the store
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_25
      choices:
        - !<!ChoiceValue> 
          value: available
          language:
            default:
              name: Available
              description: ''
        - !<!ChoiceValue> 
          value: pending
          language:
            default:
              name: Pending
              description: ''
        - !<!ChoiceValue> 
          value: sold
          language:
            default:
              name: Sold
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      choiceType: *ref_0
      defaultValue: available
      language: !<!Languages> 
        default:
          name: Get0ItemsItem
          description: ''
      protocol: !<!Protocols> {}
    - !<!ChoiceSchema> &ref_12
      choices:
        - !<!ChoiceValue> 
          value: placed
          language:
            default:
              name: Placed
              description: ''
        - !<!ChoiceValue> 
          value: approved
          language:
            default:
              name: Approved
              description: ''
        - !<!ChoiceValue> 
          value: delivered
          language:
            default:
              name: Delivered
              description: ''
      type: choice
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      choiceType: *ref_0
      language: !<!Languages> 
        default:
          name: OrderStatus
          description: Order Status
      protocol: !<!Protocols> {}
  constants:
    - !<!ConstantSchema> &ref_30
      type: constant
      value: !<!ConstantValue> 
        value: application/json
      valueType: *ref_0
      language: !<!Languages> 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !<!Protocols> {}
  dictionaries:
    - !<!DictionarySchema> &ref_45
      type: dictionary
      elementType: *ref_1
      language: !<!Languages> 
        default:
          name: DictionaryOfInteger
          description: Dictionary of <integer>
      protocol: !<!Protocols> {}
  dateTimes:
    - !<!DateTimeSchema> &ref_11
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: OrderShipDate
          description: ''
      protocol: !<!Protocols> {}
    - !<!DateTimeSchema> &ref_59
      type: date-time
      format: date-time
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      language: !<!Languages> 
        default:
          name: DateTime
          description: ''
          header: X-Expires-After
      protocol: !<!Protocols> {}
  objects:
    - !<!ObjectSchema> &ref_26
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_2
          required: false
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ObjectSchema> &ref_8
            type: object
            apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
            properties:
              - !<!Property> 
                schema: *ref_2
                serializedName: id
                language: !<!Languages> 
                  default:
                    name: id
                    description: ''
                protocol: !<!Protocols> {}
              - !<!Property> 
                schema: *ref_3
                serializedName: name
                language: !<!Languages> 
                  default:
                    name: name
                    description: ''
                protocol: !<!Protocols> {}
            serialization:
              xml:
                name: Category
                attribute: false
                wrapped: false
            serializationFormats:
              - json
              - xml
            usage:
              - input
              - output
            language: !<!Languages> 
              default:
                name: Category
                description: ''
                namespace: ''
            protocol: !<!Protocols> {}
          required: false
          serializedName: category
          language: !<!Languages> 
            default:
              name: category
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_4
          required: true
          serializedName: name
          language: !<!Languages> 
            default:
              name: name
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_23
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
            elementType: *ref_5
            serialization:
              xml:
                name: photoUrl
                attribute: false
                wrapped: true
            language: !<!Languages> 
              default:
                name: PetPhotoUrls
                description: Array of PetPhotoUrlsItem
            protocol: !<!Protocols> {}
          required: true
          serializedName: photoUrls
          language: !<!Languages> 
            default:
              name: photoUrls
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: !<!ArraySchema> &ref_24
            type: array
            apiVersions:
              - !<!ApiVersion> 
                version: 1.0.0
            elementType: !<!ObjectSchema> &ref_9
              type: object
              apiVersions:
                - !<!ApiVersion> 
                  version: 1.0.0
              properties:
                - !<!Property> 
                  schema: *ref_2
                  serializedName: id
                  language: !<!Languages> 
                    default:
                      name: id
                      description: ''
                  protocol: !<!Protocols> {}
                - !<!Property> 
                  schema: *ref_6
                  serializedName: name
                  language: !<!Languages> 
                    default:
                      name: name
                      description: ''
                  protocol: !<!Protocols> {}
              serialization:
                xml:
                  name: Tag
                  attribute: false
                  wrapped: false
              serializationFormats:
                - json
                - xml
              usage:
                - input
                - output
              language: !<!Languages> 
                default:
                  name: Tag
                  description: ''
                  namespace: ''
              protocol: !<!Protocols> {}
            serialization:
              xml:
                name: tag
                attribute: false
                wrapped: true
            language: !<!Languages> 
              default:
                name: PetTags
                description: Array of Tag
            protocol: !<!Protocols> {}
          required: false
          serializedName: tags
          language: !<!Languages> 
            default:
              name: tags
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_7
          required: false
          serializedName: status
          language: !<!Languages> 
            default:
              name: status
              description: pet status in the store
          protocol: !<!Protocols> {}
      serialization:
        xml:
          name: Pet
          attribute: false
          wrapped: false
      serializationFormats:
        - json
        - xml
      usage:
        - input
        - output
      language: !<!Languages> 
        default:
          name: Pet
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - *ref_8
    - *ref_9
    - !<!ObjectSchema> &ref_46
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_2
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_2
          serializedName: petId
          language: !<!Languages> 
            default:
              name: petId
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_10
          serializedName: quantity
          language: !<!Languages> 
            default:
              name: quantity
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_11
          serializedName: shipDate
          language: !<!Languages> 
            default:
              name: shipDate
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_12
          serializedName: status
          language: !<!Languages> 
            default:
              name: status
              description: Order Status
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_13
          serializedName: complete
          language: !<!Languages> 
            default:
              name: complete
              description: ''
          protocol: !<!Protocols> {}
      serialization:
        xml:
          name: Order
          attribute: false
          wrapped: false
      serializationFormats:
        - json
        - xml
      usage:
        - input
        - output
      language: !<!Languages> 
        default:
          name: Order
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> &ref_28
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_2
          serializedName: id
          language: !<!Languages> 
            default:
              name: id
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_14
          serializedName: username
          language: !<!Languages> 
            default:
              name: username
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_15
          serializedName: firstName
          language: !<!Languages> 
            default:
              name: firstName
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_16
          serializedName: lastName
          language: !<!Languages> 
            default:
              name: lastName
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_17
          serializedName: email
          language: !<!Languages> 
            default:
              name: email
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_18
          serializedName: password
          language: !<!Languages> 
            default:
              name: password
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_19
          serializedName: phone
          language: !<!Languages> 
            default:
              name: phone
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_20
          serializedName: userStatus
          language: !<!Languages> 
            default:
              name: userStatus
              description: User Status
          protocol: !<!Protocols> {}
      serialization:
        xml:
          name: User
          attribute: false
          wrapped: false
      serializationFormats:
        - json
        - xml
      usage:
        - input
        - output
      language: !<!Languages> 
        default:
          name: User
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
    - !<!ObjectSchema> 
      type: object
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      properties:
        - !<!Property> 
          schema: *ref_10
          serializedName: code
          language: !<!Languages> 
            default:
              name: code
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_21
          serializedName: type
          language: !<!Languages> 
            default:
              name: type
              description: ''
          protocol: !<!Protocols> {}
        - !<!Property> 
          schema: *ref_22
          serializedName: message
          language: !<!Languages> 
            default:
              name: message
              description: ''
          protocol: !<!Protocols> {}
      language: !<!Languages> 
        default:
          name: ApiResponse
          description: ''
          namespace: ''
      protocol: !<!Protocols> {}
  arrays:
    - *ref_23
    - *ref_24
    - !<!ArraySchema> &ref_33
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_25
      language: !<!Languages> 
        default:
          name: ArrayOfGet0ItemsItem
          description: Array of Get0ItemsItem
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_35
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_26
      language: !<!Languages> 
        default:
          name: ArrayOfPet
          description: Array of Pet
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_36
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_26
      language: !<!Languages> 
        default:
          name: ArrayOfPet
          description: Array of Pet
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_37
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_27
      language: !<!Languages> 
        default:
          name: ArrayOfString
          description: Array of String
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_39
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_26
      language: !<!Languages> 
        default:
          name: ArrayOfPet
          description: Array of Pet
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_40
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_26
      language: !<!Languages> 
        default:
          name: ArrayOfPet
          description: Array of Pet
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_53
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_28
      language: !<!Languages> 
        default:
          name: ArrayOfUser
          description: Array of User
      protocol: !<!Protocols> {}
    - !<!ArraySchema> &ref_55
      type: array
      apiVersions:
        - !<!ApiVersion> 
          version: 1.0.0
      elementType: *ref_28
      language: !<!Languages> 
        default:
          name: ArrayOfUser
          description: Array of User
      protocol: !<!Protocols> {}
globalParameters:
  - !<!Parameter> &ref_29
    schema: *ref_0
    clientDefaultValue: ''
    implementation: Client
    origin: 'modelerfour:synthesized/host'
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !<!Languages> 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !<!Protocols> 
      http: !<!HttpParameter> 
        in: uri
operationGroups:
  - !<!OperationGroup> 
    $key: ''
    operations:
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_31
                schema: *ref_26
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: Pet object that needs to be added to the store
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_31
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /pet
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '405'
        language: !<!Languages> 
          default:
            name: AddPet
            description: Add a new pet to the store
            summary: Add a new pet to the store
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_32
                schema: *ref_26
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: Pet object that needs to be added to the store
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_32
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /pet
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '405'
        language: !<!Languages> 
          default:
            name: UpdatePet
            description: Update an existing pet
            summary: Update an existing pet
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_34
            schema: *ref_33
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: status
                description: Status values that need to be considered for filter
                serializedName: status
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                explode: true
                in: query
                style: form
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /pet/findByStatus
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_34
        responses:
          - !<!SchemaResponse> 
            schema: *ref_35
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_36
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
        language: !<!Languages> 
          default:
            name: FindPetsByStatus
            description: Multiple status values can be provided with comma separated strings
            summary: Finds Pets by status
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_38
            schema: *ref_37
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: tags
                description: Tags to filter by
                serializedName: tags
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                explode: true
                in: query
                style: form
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /pet/findByTags
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_38
        responses:
          - !<!SchemaResponse> 
            schema: *ref_39
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_40
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
        language: !<!Languages> 
          default:
            name: FindPetsByTags
            description: 'Muliple tags can be provided with comma separated strings. Use\ \ tag1, tag2, tag3 for testing.'
            summary: Finds Pets by tags
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_42
            schema: *ref_41
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: petId
                description: ID of pet to return
                serializedName: petId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/pet/{petId}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_42
        responses:
          - !<!SchemaResponse> 
            schema: *ref_26
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_26
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: GetPetById
            description: Returns a single pet
            summary: Find pet by ID
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_43
            schema: *ref_27
            implementation: Method
            language: !<!Languages> 
              default:
                name: apiKey
                description: ''
                serializedName: api_key
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: header
          - !<!Parameter> &ref_44
            schema: *ref_41
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: petId
                description: Pet id to delete
                serializedName: petId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/pet/{petId}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_43
          - *ref_44
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: DeletePet
            description: Deletes a pet
            summary: Deletes a pet
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /store/inventory
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_45
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        language: !<!Languages> 
          default:
            name: GetInventory
            description: Returns a map of status codes to quantities
            summary: Returns pet inventories by status
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_47
                schema: *ref_46
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: order placed for purchasing the pet
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_47
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /store/order
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !<!SchemaResponse> 
            schema: *ref_46
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_46
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
        language: !<!Languages> 
          default:
            name: PlaceOrder
            description: Place an order for a pet
            summary: Place an order for a pet
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_49
            schema: *ref_48
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: orderId
                description: ID of pet that needs to be fetched
                serializedName: orderId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/store/order/{orderId}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_49
        responses:
          - !<!SchemaResponse> 
            schema: *ref_46
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_46
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: GetOrderById
            description: For valid response try integer IDs with value >= 1 and <= 10.\ \ Other values will generated exceptions
            summary: Find purchase order by ID
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_51
            schema: *ref_50
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: orderId
                description: ID of the order that needs to be deleted
                serializedName: orderId
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/store/order/{orderId}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_51
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: DeleteOrder
            description: For valid response try integer IDs with positive integer value.\ \ Negative or non-integer values will generate API errors
            summary: Delete purchase order by ID
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_52
                schema: *ref_28
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: Created user object
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_52
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /user
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateUser
            description: This can only be done by the logged in user.
            summary: Create user
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_54
                schema: *ref_53
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: List of user object
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_54
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /user/createWithArray
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateUsersWithArrayInput
            description: Creates list of users with given input array
            summary: Creates list of users with given input array
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_56
                schema: *ref_55
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: List of user object
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_56
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: /user/createWithList
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters: []
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: CreateUsersWithListInput
            description: Creates list of users with given input array
            summary: Creates list of users with given input array
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_57
            schema: *ref_27
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: username
                description: The user name for login
                serializedName: username
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
          - !<!Parameter> &ref_58
            schema: *ref_27
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: password
                description: The password for login in clear text
                serializedName: password
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: query
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /user/login
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_57
          - *ref_58
        responses:
          - !<!SchemaResponse> 
            schema: *ref_27
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                headers:
                  - !<!HttpHeader> 
                    schema: *ref_1
                    header: X-Rate-Limit
                    language:
                      default:
                        name: XRateLimit
                        description: calls per hour allowed by the user
                  - !<!HttpHeader> 
                    schema: *ref_59
                    header: X-Expires-After
                    language:
                      default:
                        name: XExpiresAfter
                        description: date in UTC when token expires
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_27
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                headers:
                  - !<!HttpHeader> 
                    schema: *ref_1
                    header: X-Rate-Limit
                    language:
                      default:
                        name: XRateLimit
                        description: calls per hour allowed by the user
                  - !<!HttpHeader> 
                    schema: *ref_59
                    header: X-Expires-After
                    language:
                      default:
                        name: XExpiresAfter
                        description: date in UTC when token expires
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
        language: !<!Languages> 
          default:
            name: LoginUser
            description: Logs user into the system
            summary: Logs user into the system
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: /user/logout
                method: get
                uri: '{$host}'
        signatureParameters: []
        exceptions:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - default
        language: !<!Languages> 
          default:
            name: LogoutUser
            description: Logs out current logged in user session
            summary: Logs out current logged in user session
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_60
            schema: *ref_27
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: username
                description: The name that needs to be fetched. Use user1 for testing.
                serializedName: username
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/user/{username}'
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_60
        responses:
          - !<!SchemaResponse> 
            schema: *ref_28
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
          - !<!SchemaResponse> 
            schema: *ref_28
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                knownMediaType: xml
                mediaTypes:
                  - application/xml
                statusCodes:
                  - '200'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: GetUserByName
            description: Get user by user name
            summary: Get user by user name
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_62
            schema: *ref_27
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: username
                description: name that need to be updated
                serializedName: username
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            parameters:
              - !<!Parameter> 
                schema: *ref_30
                implementation: Method
                origin: 'modelerfour:synthesized/content-type'
                required: true
                language: !<!Languages> 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: header
              - !<!Parameter> &ref_61
                schema: *ref_28
                implementation: Method
                required: true
                language: !<!Languages> 
                  default:
                    name: body
                    description: Updated user object
                protocol: !<!Protocols> 
                  http: !<!HttpParameter> 
                    in: body
                    style: json
            signatureParameters:
              - *ref_61
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpWithBodyRequest> 
                path: '/user/{username}'
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        signatureParameters:
          - *ref_62
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: UpdateUser
            description: This can only be done by the logged in user.
            summary: Updated user
        protocol: !<!Protocols> {}
      - !<!Operation> 
        apiVersions:
          - !<!ApiVersion> 
            version: 1.0.0
        parameters:
          - *ref_29
          - !<!Parameter> &ref_63
            schema: *ref_27
            implementation: Method
            required: true
            language: !<!Languages> 
              default:
                name: username
                description: The name that needs to be deleted
                serializedName: username
            protocol: !<!Protocols> 
              http: !<!HttpParameter> 
                in: path
        requests:
          - !<!Request> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpRequest> 
                path: '/user/{username}'
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_63
        responses:
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '400'
          - !<!Response> 
            language: !<!Languages> 
              default:
                name: ''
                description: ''
            protocol: !<!Protocols> 
              http: !<!HttpResponse> 
                statusCodes:
                  - '404'
        language: !<!Languages> 
          default:
            name: DeleteUser
            description: This can only be done by the logged in user.
            summary: Delete user
        protocol: !<!Protocols> {}
    language: !<!Languages> 
      default:
        name: ''
        description: ''
    protocol: !<!Protocols> {}
security: !<!Security> 
  authenticationRequired: true
language: !<!Languages> 
  default:
    name: AppConfiguration
    description: ''
protocol: !<!Protocols> 
  http: !<!HttpModel> {}
